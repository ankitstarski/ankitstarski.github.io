<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Ankit</title>
 <link href="http://codeankit.me/atom.xml" rel="self"/>
 <link href="http://codeankit.me/"/>
 <updated>2015-08-03T02:40:31+05:30</updated>
 <id>http://codeankit.me</id>
 <author>
   <name>Ankit</name>
   <email></email>
 </author>

 
 <entry>
   <title>UI/UX improvements</title>
   <link href="http://codeankit.me/blog/ui-improvements"/>
   <updated>2015-08-03T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/ui-improvements</id>
   <content type="html">&lt;p&gt;This is a progress report for my GSoC project on &lt;a href=&quot;https://wiki.gnome.org/Outreach/SummerOfCode/2015/Projects/Ankit_GPSSharing&quot;&gt;GPS Sharing&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;What&amp;#39;s done since the last blog post?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;UI/UX improvements in Android application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fixes in Geoclue&amp;#39;s Network NMEA source.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Android application now displays the level of accuracy provided by the device. It also displays the 
number of clients connected to the android device at any point of time. The Android application 
prompts the user to change location settings, if the GPS is not enabled.&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;/media/2015-08-03-ui-improvements/ui-comparison.png&quot; alt=&quot;Image showing mock-up and the actual UI side by side.&quot; /&gt;
&lt;blockquote style=&quot;border-left: 10px solid #D5D5D5;&quot;&gt;Image showing mock-up and the actual UI side by side.&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Note: This a work in progress and is not yet available in the main repository. Android application source can be accessed &lt;a href=&quot;https://github.com/ankitstarski/GeoclueShare&quot;&gt;here&lt;/a&gt;. And Geoclue patches &lt;a href=&quot;https://bugs.freedesktop.org/show_bug.cgi?id=90974&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>mDNS integration</title>
   <link href="http://codeankit.me/blog/mdns-integration"/>
   <updated>2015-07-20T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/mdns-integration</id>
   <content type="html">&lt;p&gt;This is a progress report for my GSoC project on &lt;a href=&quot;https://wiki.gnome.org/Outreach/SummerOfCode/2015/Projects/Ankit_GPSSharing&quot;&gt;GPS Sharing&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;What&amp;#39;s done since the last blog post?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Integration of mDNS in Android application using an opensource library for
Java called &lt;a href=&quot;http://jmdns.sourceforge.net&quot;&gt;&lt;code&gt;JmDNS&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integration of Avahi inside Geoclue&amp;#39;s Network NMEA source.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mDNS in Android is to be used for service broadcast, the service is supposed to
be named as &lt;code&gt;&amp;lt;hostname&amp;gt;-nmea-tcp-&amp;lt;accuracy_nick&amp;gt;&lt;/code&gt;. The &lt;code&gt;accuracy_nick&lt;/code&gt; will be a string, defining 
the accuracy of the source. The accuracy nicks can be found in Geoclue&amp;#39;s &lt;a href=&quot;http://www.freedesktop.org/software/geoclue/docs/geoclue-gclue-enums.html&quot;&gt;public api&lt;/a&gt;.
An example of service name could be &lt;code&gt;geoclue-nmea-tcp-exact&lt;/code&gt;. The service type of the 
broadcasted service is &lt;em&gt;nmea.&lt;/em&gt;tcp at port number 10110 in local domain.&lt;/p&gt;

&lt;p&gt;Geoclue&amp;#39;s Network NMEA source discovers services with &lt;code&gt;_nmea._tcp&lt;/code&gt; service type in 
the local domain. The Network NMEA source keeps a list of services sorted by their accuracy levels (highest first).
Whenever a client connects to geoclue, it checks for the service with highest accuracy level and tries to connect with it, 
which then starts the flow of NMEA GGA sentences from android device.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Note: This a work in progress and is not yet available in the main repository. Android application source can be accessed &lt;a href=&quot;https://github.com/ankitstarski/GeoclueShare&quot;&gt;here&lt;/a&gt;. And Geoclue patches &lt;a href=&quot;https://bugs.freedesktop.org/show_bug.cgi?id=90974&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr/&gt;

&lt;h4&gt;EDIT:&lt;/h4&gt;

&lt;p&gt;Instead of using service name for sharing accuracy with Geoclue, we are now using 
&lt;code&gt;mDNS&lt;/code&gt; &lt;code&gt;TXT&lt;/code&gt; records for sharing accuracy of the device.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Geoclue Share</title>
   <link href="http://codeankit.me/blog/geoclue-share"/>
   <updated>2015-07-07T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/geoclue-share</id>
   <content type="html">&lt;p&gt;So, this post is about an Android application named &amp;#39;Geoclue Share&amp;#39; which will be 
able to share location data from an android device to Geoclue device.&lt;/p&gt;

&lt;p&gt;This is part of a GSoC 2015 project. You can read more about it &lt;a href=&quot;https://wiki.gnome.org/Outreach/SummerOfCode/2015/Projects/Ankit_GPSSharing&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;h4&gt;What&amp;#39;s been done up till now?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Created Geoclue module which will connect to the Location server for location
data.&lt;/li&gt;
&lt;li&gt;Created a basic Basic Android application which sends location data to
connected Geoclue client, whenever available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;How does it work?&lt;/h4&gt;

&lt;p&gt;As soon as the client connects to the application, it starts the GPS and starts
sending in location data in form of GGA sentences.&lt;/p&gt;

&lt;p&gt;If there is no client the GPS remains off. This application keeps on running in
the background (as a Service) in order to listen for new clients.&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;/media/2015-07-07-geoclue-share/geoclue-share.jpg&quot; alt=&quot;A flow diagram for our Android application.&quot; /&gt;
&lt;blockquote style=&quot;border-left: 10px solid #D5D5D5;&quot;&gt;A flow diagram for our Android application.&lt;/blockquote&gt;&lt;/div&gt;

&lt;h4&gt;What&amp;#39;s next?&lt;/h4&gt;

&lt;p&gt;The next phase of this development would be to use mDNS for service broadcasting.
This way connecting two devices would become more seamless.&lt;/p&gt;

&lt;p&gt;Android side will use &lt;a href=&quot;https://developer.android.com/training/connect-devices-wirelessly/nsd.html&quot;&gt;NSD&lt;/a&gt; 
for service broadcasting. &lt;a href=&quot;http://www.avahi.org/&quot;&gt;Avahi&lt;/a&gt; is to be used a Geoclue end.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;Note: This a work in progress and is not yet available in the main repository. Android application source can be accessed &lt;a href=&quot;https://github.com/ankitstarski/GeoclueShare&quot;&gt;here&lt;/a&gt;. And Geoclue patches &lt;a href=&quot;https://bugs.freedesktop.org/show_bug.cgi?id=90974&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Network location sharing</title>
   <link href="http://codeankit.me/blog/nmea-source"/>
   <updated>2015-06-16T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/nmea-source</id>
   <content type="html">&lt;p&gt;So, this post is about a new Geoclue feature that will let Geoclue users share
location data. Location data will be sent from a GPS enabled device to a Geoclue device over local network. 
This is part of a GSoC 2015 project. You can read more about it &lt;a href=&quot;https://wiki.gnome.org/Outreach/SummerOfCode/2015/Projects/Ankit_GPSSharing&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;h4&gt;What will this module do?&lt;/h4&gt;

&lt;p&gt;Using &lt;code&gt;GClueNMEASource&lt;/code&gt;, Geoclue will be able to receive and parse location data sent 
from a GPS enabled network device. For this we&amp;#39;ll have to create a location service on 
the GPS device that would let it send location data in the form of &lt;a href=&quot;http://www.gpsinformation.org/dale/nmea.htm#GGA&quot;&gt;GGA sentences&lt;/a&gt;. &lt;code&gt;GClueNMEASource&lt;/code&gt; uses &lt;code&gt;libgio&lt;/code&gt;&amp;#39;s asynchronous 
GSockets for network communication purpose.&lt;/p&gt;

&lt;h4&gt;Protocol&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Since the GPS device will be acting as Location server, Geoclue will first need to 
find and connect with it. For this we&amp;#39;ll be using mDNS service on the GPS device 
and detect that service on the Geoclue end.&lt;/li&gt;
&lt;li&gt;Once the connection between &lt;code&gt;GClueNMEASource&lt;/code&gt; and location server is established, location server 
will firstly send the size of GGA sentence as 32-bit unsigned integer in network 
byte order.&lt;/li&gt;
&lt;li&gt;After sending the size of GGA sentence, location server will send the GGA sentence containing 
location data.&lt;/li&gt;
&lt;li&gt;This will be repeated every-time new location data is available on GPS device 
and connection between the devices is alive.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;What&amp;#39;s been done at Geoclue end?&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Geoclue is currently able to connect with a dummy location server.&lt;/li&gt;
&lt;li&gt;It can successfully receive GGA sentences and parse it into a Location object.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;What might a dummy server look like?&lt;/h4&gt;

&lt;p&gt;Following is the python implementation for a dummy location server which continuously sends
pseudo location data in the form of GGA sentences:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;#!/usr/bin/python
import socket, struct
import time, math
import random, re

class DummyNMEAServer:
  &quot;&quot;&quot; This is a fake NMEA Sentence server. &quot;&quot;&quot;

  HOST = &#39;&#39;
  PORT = 60793

  def __init__(self):
    self.socket = socket.socket()
    self.c = None

  def checksum(self, sentence):
    &quot;&quot;&quot; Source: http://code.activestate.com/recipes/576789-nmea-sentence-checksum/ &quot;&quot;&quot;
    if re.search(&quot;\n$&quot;, sentence):
        sentence = sentence[:-1]

    calc_cksum = 0
    for s in sentence:
        calc_cksum ^= ord(s)

    &quot;&quot;&quot; Return the nmeadata, the checksum from
        sentence, and the calculated checksum
    &quot;&quot;&quot;
    return format(calc_cksum, &#39;x&#39;)

  def run(self):
    &quot;&quot;&quot; Sends dummy location info of coordinates moving around (0, 0)
      in circular pattern &quot;&quot;&quot;
    s = self.socket
    s.bind((DummyNMEAServer.HOST, DummyNMEAServer.PORT))
    s.listen(5)
    while True:
      c, addr = s.accept()
      self.c = c
      print &#39;Got connection from&#39;, addr
      lat = lon = 0
      cy = cx = 0.0
      r = 4.3
      t = 0
      latS = lonS = &quot;&quot;

      while True:
        for i in range(360):
          lat = cx + math.cos(i / 180.0 * math.pi) * r
          lon = cy + math.sin(i / 180.0 * math.pi) * r

          t = time.strftime(&quot;%H%M%S&quot;, time.gmtime(time.time()))

          latS = &#39;N&#39; if lat &gt;= 0 else &#39;S&#39;
          lonS = &#39;E&#39; if lon &gt;= 0 else &#39;W&#39;

          print t
          gga = &quot;$GPGGA,%s,%02d%06.3f,%s,%03d%06.3f,%s,1,08,0.9,545.4,M,46.9,M,,&quot;%(
            t, abs(lat), abs((lat-int(lat))*60), latS,
            abs(lon), abs((lon-int(lon))*60), lonS)
          gga = gga + &quot;*&quot; + str(self.checksum(gga))
          size = struct.pack(&quot;!L&quot;,len(gga))
          c.send(size)
          print(len(gga))
          print gga
          c.send(gga)
          time.sleep(random.randint(1,10))
    c.close()       

app = DummyNMEAServer();
app.run();&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;/media/2015-06-16-nmea-source/where-am-i.png&quot; alt=&quot;A screenshot of demo app while receiving location from dummy server&quot; /&gt;
&lt;blockquote style=&quot;border-left: 10px solid #D5D5D5;&quot;&gt;A screenshot of demo app while receiving location from dummy server&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Note: This a work in progress and is not yet available in the main repository. You can access patches at &lt;a href=&quot;https://bugs.freedesktop.org/show_bug.cgi?id=90974&quot;&gt;https://bugs.freedesktop.org/show_bug.cgi?id=90974&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sharing mobile GPS with PC</title>
   <link href="http://codeankit.me/blog/GSoC-Geoclue"/>
   <updated>2015-05-21T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/GSoC-Geoclue</id>
   <content type="html">&lt;p&gt;This is my first post for &lt;a href=&quot;http://planet.gnome.org&quot;&gt;Planet GNOME&lt;/a&gt; regarding my 
&lt;a href=&quot;http://google-melange.com/gsoc/homepage/google/gsoc2015&quot;&gt;GSoC 2015&lt;/a&gt; 
&lt;a href=&quot;https://wiki.gnome.org/Outreach/SummerOfCode/2015/Projects/Ankit_GPSSharing&quot;&gt;Project&lt;/a&gt; under the
mentorship of &lt;a href=&quot;https://wiki.gnome.org/ZeeshanAli&quot;&gt;Zeeshan Ali (Khattak)&lt;/a&gt;. 
This summer, I am working on a project to let GNOME users access GPS location (shared) 
from a GPS source. Android devices are among the most common GPS sources. So, a 
part of this project will be on Android. This android application will work as a 
location server for &lt;a href=&quot;http://freedesktop.org/wiki/Software/GeoClue/&quot;&gt;Geoclue&lt;/a&gt;. 
This server will be discoverable via mDNS clients like &lt;a href=&quot;http://en.wikipedia.org/wiki/Avahi_%28software%29&quot;&gt;Avahi&lt;/a&gt; 
and &lt;a href=&quot;http://en.wikipedia.org/wiki/Bonjour_%28software%29&quot;&gt;Bonjour&lt;/a&gt;. &lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;/media/2015-05-21-GSoC-Geoclue/location-sharing-apps.png&quot; alt=&quot;Tentative design of Android application&quot; width=&quot;100%&quot; /&gt;
&lt;blockquote style=&quot;border-left: 10px solid #D5D5D5;&quot;&gt;Tentative design of Android application&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;In a broad sense, Android application will use &lt;a href=&quot;http://developer.android.com/reference/java/net/ServerSocket.html&quot;&gt;ServerSocket&lt;/a&gt; 
to communicate with Geoclue. Each time Android &lt;a href=&quot;http://developer.android.com/reference/android/location/LocationListener.html&quot;&gt;LocationListener&lt;/a&gt; listens to a new Location, it will transmit that location data to Geoclue in form
of &lt;a href=&quot;http://www.gpsinformation.org/dale/nmea.htm#nmea&quot;&gt;NMEA sentence&lt;/a&gt;. Geoclue takes 
that location information and passes it on as GPS location. Apart from the android application, 
GUI application for Geoclue to Geoclue location passing is to be developed.&lt;/p&gt;

&lt;h4&gt;Timeline followed by the project will be as follows:&lt;/h4&gt;

&lt;table&gt;&lt;tbody&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 1 and 2 &lt;/td&gt;
  &lt;td&gt;Experiments with the code and implementation of a basic layout for new Geoclue location source. This Geoclue location source would be able to take in NMEA GGA sentences and convert into location object.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 3 and 4 &lt;/td&gt;
  &lt;td&gt;Geoclue Location source continued.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 5 and 6 &lt;/td&gt;
  &lt;td&gt;Working skeleton of Android application that will connect with Geoclue and send information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 7 and 8 &lt;/td&gt;
  &lt;td&gt;&lt;em&gt;Geoclue GUI&lt;/em&gt; for Geoclue to Geoclue sharing.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 9 and 10 &lt;/td&gt;
  &lt;td&gt;Implementation of more seamless connectivity using &lt;em&gt;Android NSD&lt;/em&gt; and &lt;em&gt;Avahi&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 11 and 12 &lt;/td&gt;
  &lt;td&gt;Android application UI/UX improvements.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td style=&quot;min-width:150px&quot;&gt;Week 13 &lt;/td&gt;
  &lt;td&gt;Testing, optimization, bug fixing and wrapping up.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Who am I? O.o</title>
   <link href="http://codeankit.me/blog/who-am-i"/>
   <updated>2015-05-07T00:00:00+05:30</updated>
   <id>http://codeankit.me/blog/who-am-i</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Love for Science and Art
&lt;/div&gt;

&lt;p&gt;My name is Ankit. I am an Engineering student at &lt;a href=&quot;http://nitsri.net&quot;&gt;National Institute of Technology, 
Srinagar&lt;/a&gt; (India). Currently I am in the last year of my B.Tech. 
course in Computer Science Engineering.&lt;/p&gt;

&lt;p&gt;I love to sketch and paint. I am also a flute player. In my free time I like to 
build creative things. I am also a frequent user of &lt;a href=&quot;http://9gag.tv&quot;&gt;9GAG&lt;/a&gt;. Anything
that relates to Science or Art is sufficient to gain my attention. I watch a lot 
of TV shows. I am also a good Web-designer. I love Chicken Shawarama.&lt;/p&gt;

&lt;p&gt;Not to mention, I love to code.&lt;/p&gt;
</content>
 </entry>
 

</feed>
